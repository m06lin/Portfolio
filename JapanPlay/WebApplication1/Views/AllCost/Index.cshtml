@using System.Web.Script.Serialization;
@{Application.Controllers.CostController obj = new Application.Controllers.CostController();
  string accountid = obj.AccountID();
  int level = obj.AccountLevel();
    }
<script>
    var AcName = [];
    var JobType = [];
    var CostType = [];
    var AreaType = [];
    var CurrType = [];
    $(document).ready(function () {
        //@*  var list = JSON.parse('@Html.Raw(new JavaScriptSerializer().Serialize(Model))');*@
        AcName = JSON.parse('@Html.Raw(new JavaScriptSerializer().Serialize(ViewBag.AcName))');
        JobType = JSON.parse('@Html.Raw(new JavaScriptSerializer().Serialize(ViewBag.JobType))');
        CostType = JSON.parse('@Html.Raw(new JavaScriptSerializer().Serialize(ViewBag.CostType))');
        AreaType = JSON.parse('@Html.Raw(new JavaScriptSerializer().Serialize(ViewBag.AreaType))');
        CurrType = JSON.parse('@Html.Raw(new JavaScriptSerializer().Serialize(ViewBag.CurrType))');
        $('#SearchACName')
        .kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "ID",
            dataSource: AcName,
            index: 0,

        });
        $('#SearchType')
        .kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "ID",
            dataSource: CostType,
            index: 0,

        });
        AllCostSearch();
    });
    function AllCostSearch() {
        var AcID = $("#SearchACName").val();
        var Type = $("#SearchType").val();
        var dataSource = new kendo.data.DataSource({

            //data: list,
            transport: {
                read: {
                    url: "/Cost/CostRead",
                    dataType: "json", // "jsonp" is required for cross-domain requests; use "json" for same-domain requests
                    data: { AcID: AcID, Type: Type }
                }
            },
            batch: true,
            editable: false,
            pageable: {
                refresh: true,
                pageSizes: true
            },
            pageSize: 10,
            schema: {
                model: {
                    id: "ID",
                    fields: {
                        ID: {
                            type: 'number', editable: false, defaultValue: function () {
                                return 0;
                            }
                        },
                        Account_Id: {
                            type: 'number', editable: false, defaultValue: function () {
                                return 0;
                            }
                        },
                        AccountName: {
                            type: 'string'
                        },
                        Job_Level: {
                            defaultValue: JobType[0]
                        },
                        Cost_Date: { type: 'date' },
                        Cost_Name: {
                            type: 'string',
                            validation: {
                                required: true,
                                Titlevalidation: function (input) {
                                    if (input.is("[name='Cost_Name']")) {
                                        if ($.trim(input.val()) == '') {
                                            input.attr("data-Titlevalidation-msg", "不可為空");
                                            return input.val();
                                        }
                                    }

                                    return true;
                                }
                            }
                        },
                        Cost_Type: { defaultValue: CostType[0] },
                        Area: {
                            defaultValue: AreaType[0]
                        },
                        Note: {
                            type: 'string',
                            
                        },
                        Spend: {
                            type: 'string',
                            validation: {
                                required: true,
                                Titlevalidation: function (input) {
                                    if (input.is("[name='Spend']")) {
                                        if ($.trim(input.val()) == '') {
                                            input.attr("data-Titlevalidation-msg", "不可為空");
                                            return input.val();
                                        }
                                    }

                                    return true;
                                }
                            }
                        },
                        Currency: { defaultValue: CurrType[0] },
                    }
                }
            }


        });
        $("#Allcostgrid").kendoGrid({
            dataSource: dataSource,
            pageable: {
                refresh: true,
                pageSizes: true,
                change: function (e) { }
            },
            height: "600px",
            pageSize: "10",
            columns: [
                
                {
                    field: "AccountName",
                    width: 90,
                    title: "記錄人"
                },
                {
                    field: "Job_Level",
                    width: 60,
                    template: "#=Job_Level.Name#",
                    title: "職位"
                },
                {
                    field: "Cost_Date",
                    width: 100,
                    title: "消費日期",
                    format: "{0:MM/dd/yyyy}"
                },
                {
                    width: 100,
                    title: "花費名稱",
                    field: "Cost_Name"
                },
                {
                    width: 70,
                    title: "花費類型",
                    //editor: CostTypeDropDownEditor,
                    template: "#=Cost_Type.Name#",
                    field: "Cost_Type"
                },
                {
                    width: 70,
                    field: "Area",
                    //editor: AreaTypeDropDownEditor,
                    template: "#=Area.Name#",
                    title: "地區",

                },
                {
                    width: 300,
                    title: "附註",
                    field: "Note"
                },
                {
                    title: "花費",
                    width: 70,
                    field: "Spend"
                },
                { title: "貨幣", width: 90,  template: "#=Currency.Name#", field: "Currency" },
                 { command: { text: "刪除", click: AllCostDelete }, title: "", width: "90px" }
            ],
            dataBound: function () {
                var gridtmp = this;
                var model;
                var level = '@level';
                var accountid = '@accountid';
                gridtmp.tbody.find("tr[role='row']").each(function () {
                    model = gridtmp.dataItem(this);
                   
                    if (model.Job_Level.ID <= level && accountid != model.Account_Id) {
                        
                        $(this).find(".k-grid-刪除").remove();
                    }
                });
            },
            
        })
            
        .data("kendoGrid");
        
    }
    
    function AllCostDelete(e) {
        var accountid = GetCookie("Account");
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        if (confirm("確定要刪除該筆資料?") == true) {
            var id = dataItem.ID;
            var dataSource = $('#Allcostgrid').data("kendoGrid").dataSource;
            dataSource.remove(dataItem);
            if (id == 0) {

            }
            else {
                var json = JSON.stringify({ "ID": id, "accountid": accountid });
                $.ajax({
                    url: "/AllCost/CostDelete",
                    contentType: "application/json;charset=utf-8",
                    data: json,
                    type: 'Post',
                    dataType: "Json",
                    success: function (res) {
                        if (res.isSuccess) {
                            alert("刪除成功!!");
                            dataSource.read();
                        } else {
                            alert("刪除失敗!!\n錯誤訊息 : \n" + res.Msg);
                            dataSource.read();
                        }
                    },
                    complete: function () {
                    }
                });
            }
        }
        else { }
    }
    function GetCookie(name) {
        var arr = document.cookie.match(new RegExp("(^| )" + name + "=([^;]*)(;|$)"));
        if (arr != null) return unescape(arr[2]); return null;
    }
</script>
<table>
    <tr>
        <th>姓名:</th>
        <td>
        <input id="SearchACName" />
        </td>
        <th>類型:</th>
        <td>
            <input id="SearchType" />
        </td>
        <td>
            <input type="button" value="查詢" class="btn btn-default" onclick="AllCostSearch()" />
        </td>
    </tr>
</table>
<div id="Allcostgrid"></div>
